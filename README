===
cari problem dan solusi anotasi freelabel pada dataset ikan agar efisien.
contrib:
freelabel for fish dataset: persentase, banyak coretan, waktu, dsb.
numsets=1 (time, persentase)
numsets=8 with multiprocessing reduced time (time, persentase)
refine trace (time, persentase)
crop/zoom (time, persentase)

trace as polyline (kemudahan diubah/dihapus)?
rgr: snic without queue
rgr: using other modified snic 
similar trace method
===

===
joblib

===

===
mp
git clone freelabel freelabelmp
virtualenv .

notes:
openmp
===


===
thesis notes

edit freelabel:
D:\Works\freelabel_edit
D:\Works\freelabel_edit\freelabel\views.py

general:
- (initanns2)
  buat array anotasi: array numpy 2 dimensi sejumlah panjang x lebar gambar (contoh 512x512), diisi nol, simpan sebagai file mask (static/'+username+'/lastmask.npy)
- (drawTrace & ourLib.tracePolyline) 
  ambil nilai parameter trace[], gambarkan polylines di array anotasi, warna sesuai kategori, menggunakan fungsi polylines opencv2
  format sebuah trace (polyline): x1,y1,size,kategori,x2,y2,size,kategori,...
- buka url gambar, jadikan sebagai array numpy 1 dimensi (array of bytes sesuai format image)
- (*startRGR*) lakukan RGR dengan argumen utamanya berupa array image dan array anotasi, file mask akan berubah
- buka file mask, kirim sebagai response

startRGR:
- array bytes diubah ke nilai image. hasilnya array 3 dimensi, x(width);y(height);color(BGR) (contoh 512x512x3)
- *main*, dengan argumen utamanya berupa array image dan array anotasi
- return im_color array 3 dimensi, x(width);y(height);color(BGRA) (contoh 512x512x4). background(transparent)=(255 255 255 0) foreground/fish(solid)=(0 0 128 255)
- simpan im_color ke file mask

main:
- resize array image kalau berbeda ukurannya dengan array anotasi
- ekstrak array r, g, dan b dari array image. masing-masing merupakan array 1 dimensi berukuran width*height
- Rectangular Kernel - equal to strel in matlab
- load PASCAL color map. numpy array (256,1,3). mewakili warna dari 256 kelas Pascal (contoh: background - hitam, aeroplace - merah, bicycle - hijau, ...)
- buat kernel persegi ukuran 80x80 SE = cv.getStructuringElement(cv.MORPH_RECT, (80, 80))  # used for identifying far background 
- tentukan daftar kelas dan jumlahnya, berdasarkan anotasi (tidak termasuk kelas background)
- buat numpy array 3 dimensi berukuran width*height*jumlah kelas, untuk menyimpan mask dari tiap foreground kelas, awalnya 0 semua
- anotasi dipindahkan ke array mask ini. coretan di sebuah foreground kelas dimasukkan ke layer mask yang terkait dengan nilai 1.
- buat np array preseg (mask dari pixel yang teranotasi, mengabaikan kelas) width*height, tiap coretan trace foreground memiliki nilai 2 (menyatakan pixel dengan high confidence), sisanya 0
- buat np array ROI, sama dengan preseg
- hitung jumlah pixel high confidence
- buat array 1 dimensi dari ROI dengan style Fortran (mulai kolom 1 dst)
- array R_H berisi indeks dari array ROI yang memiliki nilai > 0
- hitung jumlah sampel: jumlah high confident pixel dibagi 1.33 (cellSize)
- buat array 1 dimensi dari preseg dengan style default/C (mulai baris 1 dst)
- refcls adalah matrix scoremap 2 dimensi untuk setiap iterasi, berukuran (weight*height*jumlahkelas)*8 (8=numsets, number of seeds sets (samplings))
- multiprocessing regGrowing
- 
===

====
todo

fish table: false positive, false negative, tambahan stroke latar belakang, tambahan stroke ikan, persen akhir
mendefinisikan praktek2 yang perlu diperhatikan dalam menjalankan metode freelabel untuk kasus di dalam tesis atau kasus serupa

size of remainders
refine zoom
compare: bounding box, rectangle, edge

zoom
crop image
partial refine traces
test for many images programatically
summary
v overlay mask
v polyline
v category pop up
polygon color
no overlay when selected
select by line
v image mask method
multi user
v base score depends on method of base annotation
v record time
====

=========
freelabel

ubuntu app:

jika perlu ssh terminal (127.0.0.1:22):
/usr/bin/ssh-keygen -A
vi /etc/ssh/sshd_config
AllowUsers josef
PasswordAuthentication yes
service ssh start


cd /home/josef/anntools/freelabel
source ./bin/activate
python manage.py runserver 0.0.0.0:9000
http://localhost:9000/freelabel/
^C
deactivate

chmod 666 freelabel/ourLib.py freelabel/views.py
cp /mnt/d/Works/freelabel_edit/freelabel/ourLib.py freelabel/
cp /mnt/d/Works/freelabel_edit/freelabel/views.py freelabel/
C:\Users\Jos\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\LocalState\rootfs\home\josef\anntools\freelabel\freelabel
D:\Works\freelabel_edit\freelabel
---

---
install:
README.md
FreeLabel_api/settings.py
ALLOWED_HOSTS = ['localhost','142.93.169.91']
=====

===
d:
cd D:\Works\freelabel_edit
D:\Users\Jos\.virtualenv\freelabel\Scripts\activate.bat
pip install -r requirements.txt
	- cd freelabel
	- python setup.py build_ext --inplace
	- cd ..
---
run 

d:
cd D:\Works\freelabel_edit
D:\Users\Jos\.virtualenv\freelabel\Scripts\activate.bat
python manage.py runserver 0.0.0.0:9000

---
alt?
cd D:\Users\Jos\.virtualenv
python -m venv freelabelplus
D:\Users\Jos\.virtualenv\freelabelplus\Scripts\activate.bat

d:
cd D:\Works\freelabel_edit
D:\Users\Jos\.virtualenv\freelabelplus\Scripts\activate.bat
python manage.py runserver 0.0.0.0:9000
===



===
run

anaconda prompt
d:
cd D:\Users\Jos\Projects\fisheg 
D:\Users\Jos\.virtualenv\djangodev\Scripts\activate.bat
python manage.py runserver 0.0.0.0:8000
http://127.0.0.1:8000
^C
deactivate

---
install

virtualenv -p python3 /home/josef/.virtualenv/djangodev
source /home/josef/.virtualenv/djangodev/bin/activate
pip install Django
pip install Pillow
pip install requests
pip install numpy
pip install scikit-image
pip install shapely
ufw status
sudo ufw allow 8009
python manage.py runserver 8009
====

===
{"image_0063.png403086":{"filename":"image_0063.png","size":403086,"regions":[{"shape_attributes":{"name":"polygon","all_points_x":[178,320,410,302],"all_points_y":[143,75,420,424]},"region_attributes":{"class":"fish"}},{"shape_attributes":{"name":"polygon","all_points_x":[389,494,492,467],"all_points_y":[161,223,343,376]},"region_attributes":{"class":"background"}}],"file_attributes":{}}}

{info: {…}, images: Array(1), annotations: Array(2), licenses: Array(1), categories: Array(2)}{info: {…}, images: Array(1), annotations: Array(2), licenses: Array(1), categories: Array(2)}
annotations: Array(2)
0: {id: 0, image_id: "0", category_id: 1, segmentation: Array(6), area: 1628, …}
1: {id: 1, image_id: "0", category_id: 2, segmentation: Array(6), area: 2322, …}
length: 2
__proto__: Array(0)
categories: Array(2)
0: {id: 1, name: "background", supercategory: "class"}
1: {id: 2, name: "fish", supercategory: "class"}
length: 2
__proto__: Array(0)
images: [{…}]
info: {year: 2020, version: "1", description: "Exported using VGG Image Annotator (http://www.robots.ox.ac.uk/~vgg/software/via/)", contributor: "", url: "http://www.robots.ox.ac.uk/~vgg/software/via/", …}
licenses: [{…}]
===

=======
modules

python manage.py startapp main
python manage.py startapp image_mng
python manage.py startapp dataset_mng
python manage.py startapp annotate
python manage.py startapp annot_bylabel
python manage.py startapp annot_freelabel
python manage.py startapp annot_maskrcnn
python manage.py startapp ref_dataset_mngp



=======
package

(djangodev) (base) C:\Users\Jos>pip list
Package    Version
---------- -------
-ip        19.0.3
asgiref    3.2.3
Django     3.0.3
pip        20.0.2
pytz       2019.3
setuptools 40.8.0
sqlparse   0.3.0

pip install scikit-image
pip install Shapely
osgeo4w

pip install requests

===
http://142.93.169.91:8000/user/josef/notebooks/Mask_RCNN/samples/polygon_from_prediction.ipynb#
http://download.osgeo.org/osgeo4w/osgeo4w-setup-x86_64.exe